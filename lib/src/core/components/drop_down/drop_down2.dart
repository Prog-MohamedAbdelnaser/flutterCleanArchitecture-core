import 'package:dropdown_button2/dropdown_button2.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:softcore/main_index.dart';import '../bottom_sheet/common_list_item.dart';class Dropdown2 extends StatelessWidget {  final String? hint;  final String? textvalue;  final String? hintText;  final List<Item>? items;  final AutovalidateMode? autovalidateMode;  final Function(Item item)? onChanged;  final String? validator;  final String? value;  const Dropdown2(      {Key? key,        this.hint,        this.value,        this.hintText,        this.textvalue,        this.items,        this.autovalidateMode,        this.onChanged,        this.validator})      : super(key: key);  @override  Widget build(BuildContext context) {    return Material(      color: Colors.white,      borderRadius: BorderRadius.circular(8),      child: DropdownButtonFormField2(        decoration:context.inputDecoration().copyWith(hintText: hintText),        isDense: true,        isExpanded: true,          autovalidateMode:autovalidateMode,        hint: hintText !=null ? Text(            hintText!,            style:  context.textTheme.labelLarge!.copyWith(color:  context.textTheme.labelLarge!.color!.withOpacity(0.8))        ):const SizedBox.shrink(),        iconStyleData: IconStyleData(          icon:  Icon(            Icons.keyboard_arrow_down,            color: context.theme.primaryColor,          ),          iconSize: 30,        ),        selectedItemBuilder: (item) {          return items!              .map((item) => Text(            item.value ?? '',            style: context.textTheme.bodyMedium))              .toList();        },        value:value ,        items: items!            .map((item) => DropdownMenuItem<Item>(          value: item,          child: Text(            item.value ?? '',            style: context.textTheme.labelMedium!,          ),        ))            .toList(),        validator: (value) {          if (value == null) {            return validator ?? '';          }          return null;        },        onChanged:(item){          //onChanged!(item as Item);        },      ),    );  }}